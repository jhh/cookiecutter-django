# just manual: https://github.com/casey/just#readme

_default:
  @just --list

STATIC_DIR := "{{ cookiecutter.project_slug }}" / "static"
CSS_DIR := STATIC_DIR / "css"
JS_DIR := STATIC_DIR / "js"

# bootstrap the development environment
bootstrap: pre-commit update

# open the project in Pycharm
edit:
  pycharm .

# update CSS and download all JS dependencies
update: venv update-htmx {% if cookiecutter.css_framework != "none" -%}update-css{%- endif %} {% if cookiecutter.use_alpine -%}update-alpine{%- endif %}
    direnv reload

CURL := "curl --no-progress-meter --location"

# update dev dependencies to latest version
update-dev: && poetry-check
    poetry add --group=dev --lock black@latest
    poetry add --group=dev --lock django-debug-toolbar@latest
    poetry add --group=dev --lock ipython@latest
    poetry add --group=dev --lock rich@latest

# checks poetry.lock against the version of pyproject.toml and locks if neccessary
poetry-check:
    poetry check --lock --quiet || (just poetry-lock)

# locks the python packages in pyproject.toml without updating the poetry env
poetry-lock:
    poetry lock --no-update

# install pre-commit hooks
pre-commit:
    pre-commit install --install-hooks

# refresh the python packages in the dev env
venv: poetry-check
    nix build .#devEnv -o .venv

HTMX_BASE := "https://unpkg.com/htmx.org/dist"
HTMX_EXT_BASE := "https://unpkg.com/htmx.org/dist/ext"
HTMX_JS := "htmx.min.js"
CLASS_TOOLS_JS := "class-tools.js"

{% macro ev(name) -%}
{% raw -%} {{ {%- endraw %} {{ name }} {% raw -%} }} {%- endraw %}
{%- endmacro -%}
{% if cookiecutter.css_framework == "tailwind" -%}
update-css:
    tailwindcss -i {{ ev('CSS_DIR') }}/base.css -o {{ ev('CSS_DIR') }}/main.css

# watch HTML templates and update CSS
watch:
    tailwindcss -i {{ ev('CSS_DIR') }}/base.css -o {{ ev('CSS_DIR') }}/main.css --watch
{% endif -%}

# run the development server
run check="none": {% if cookiecutter.css_framework != "none" -%}update-css{%- endif %}
    python {{ ev('if check != "none" { "-X dev" } else { "" }') }} manage.py runserver

# update the HTML library
update-htmx:
    {{ ev('CURL') }} {{ ev('HTMX_BASE') }}/{{ ev('HTMX_JS') }} --output {{ ev('JS_DIR') }}/{{ ev('HTMX_JS') }}
    {{ ev('CURL') }} {{ ev('HTMX_EXT_BASE') }}/{{ ev('CLASS_TOOLS_JS') }} --output {{ ev('JS_DIR') }}/{{ ev('CLASS_TOOLS_JS') }}

    # add newline so pre-commit doesn't complain
    echo "" >> {{ ev('JS_DIR') }}/{{ ev('HTMX_JS') }}
    echo "" >> {{ ev('JS_DIR') }}/{{ ev('CLASS_TOOLS_JS') }}

{% if cookiecutter.use_alpine -%}
# update the Alpine JS library to latest version
update-alpine:
    {{ ev('CURL') }} https://unpkg.com/alpinejs --output {{ ev('JS_DIR') }}/alpine.js
{%- endif %}